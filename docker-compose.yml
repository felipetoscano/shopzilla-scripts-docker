version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    healthcheck:
      test: nc -z kafka 29092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "kafka-topics --create --topic NOVO_PEDIDO --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 --if-not-exists
      && kafka-topics --create --topic CONFIRMACAO_PEDIDO --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 --if-not-exists"

  sql-server:
    image: mcr.microsoft.com/mssql/server:latest
    working_dir: /usr/src/app 
    command: sh -c ' chmod +x ./entrypoint.sh; ./entrypoint.sh & /opt/mssql/bin/sqlservr;'
    volumes:
      - /var/opt/mssql
      - ./:/usr/src/app 
    volumes_from:
      - sql-server-data
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Password123!
    ports:
      - 1433:1433

  sql-server-data:
    image: mcr.microsoft.com/mssql/server:latest
    entrypoint: /bin/bash

  shopzilla-pedidos-api:
    image: shopzilla-pedidos-api:latest
    depends_on: 
      init-kafka:
        condition: service_completed_successfully 
      sql-server:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PedidosDb=Server=host.docker.internal;Database=DB_PEDIDOS;TrustServerCertificate=True;User=sa;Password=Password123!
      - ConnectionStrings__Kafka=kafka:29092
    ports:
      - 7176:80

  shopzilla-clientes:
    image: shopzilla-clientes:latest
    depends_on: 
      init-kafka:
        condition: service_completed_successfully 
      sql-server:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__ClientesDb=Server=host.docker.internal;Database=DB_CLIENTES;TrustServerCertificate=True;User=sa;Password=Password123!
      - ConnectionStrings__Kafka=kafka:29092
    deploy:
      mode: replicated
      replicas: 3

  shopzilla-estoque:
    image: shopzilla-estoque:latest
    depends_on: 
      init-kafka:
        condition: service_completed_successfully 
      sql-server:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__EstoqueDb=Server=host.docker.internal;Database=DB_ESTOQUE;TrustServerCertificate=True;User=sa;Password=Password123!
      - ConnectionStrings__Kafka=kafka:29092
    deploy:
      mode: replicated
      replicas: 3